const User = require('../model/user');
const jwt = require('jwt-simple');

const config = require('../config');

function tokenForUser(user){
  const timestamp = new Date().getTime();

  return jwt.encode({sub:user.id,iat:timestamp},config.secret);//user.id is a proxy for user._id which is generated by mongo
}                                                             //secret is combined with sub & iat to create token

exports.signin = function(req,res,next){
  //user already authorised, now we give token
  res.send({token:tokenForUser(req.user)});
}

exports.signup = function(req,res,next){

  const email = req.body.email;
  const password = req.body.password;
  const userName = req.body.userName;

  if(!email || !password || !userName){
    return res.status(422).send({error:"You must provide a username, email and a password."})
  }

//maybe incorporate existing username check?
  User.findOne({email:email}, function(err,existingUser){

    if(err){
      return next(err);
    }
//if user exists, send error
    if(existingUser){
      return res.status(422).send({error:"Email address is already in use."})
    }
//if user email address does not exist, add to database

  const user = new User({
      email:email,
      password:password,
      userName:userName
  })

  user.save(function(err){
    if(err){
      return next(err);
    }
    res.json({token:tokenForUser(user)})
  })

  })
}
